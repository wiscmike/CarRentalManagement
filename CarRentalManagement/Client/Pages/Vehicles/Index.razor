@page "/vehicles/"
@inject HttpClient _httpClient
@inject IJSRuntime _js
@attribute [Authorize]

<style>
    .vehicle {
        font-weight: bold;
        color: #2751d8;
        align-self: center;
    }

    h3 {
        font-weight: bold;
        font-size: 35px;
        color: #2a40ee
    }
</style>

<IndexPageHeader PageLink="/vehicles/create" ButtonText="Create New Vehicle" Title="Rental Vehicles" />

@if (Vehicles == null)
{
    <div class="alert alert-info">Loading Vehicles...</div>
}
else
{
    <table class="table">
        <thead class="thead-light">
            <tr>
                <th>Make</th>
                <th>Model</th>
                <th>Year</th>
                <th>Color</th>
                <th>Daily Rate</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var vehicle in Vehicles)
            {
                <tr>
                    <td class="vehicle">@vehicle.Make.Name</td>
                    <td class="vehicle">@vehicle.Model.Name</td>
                    <td class="vehicle">@vehicle.Year</td>
                    <td class="vehicle">@vehicle.Color.Name</td>
                    <td class="vehicle">@vehicle.RentalRate</td>
                    <td>
                        <a href="vehicles/view/@vehicle.Id" class="btn btn-primary" title="View selected vehicle">
                            <span class="oi oi-book"></span>
                        </a>
                        <a href="vehicles/edit/@vehicle.Id" class="btn btn-warning" title="Edit selected vehicle">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" @onclick="@(()=>Delete(vehicle.Id))" title="Delete selected vehicle">
                            <span class="oi oi-delete"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Vehicle> Vehicles;

    protected async override Task OnInitializedAsync()
    {
        Vehicles = await _httpClient.GetFromJsonAsync<List<Vehicle>>(EndPoints.VehiclesEndPoint);
    }

    private async Task Delete(int vehicleId)
    {
        var vehicle = Vehicles.FirstOrDefault(m => m.Id == vehicleId);

        if (vehicle != null)
        {
            var confirm = await _js.InvokeAsync<bool>("confirm", $"Are you sure you want to delete the {vehicle.Make.Name} {vehicle.Model.Name}?");
            if (confirm)
            {
                await _httpClient.DeleteAsync($"{EndPoints.VehiclesEndPoint}/{vehicleId}");
                await OnInitializedAsync();
            }
        }
    }
}
